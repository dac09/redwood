name: Cypress E2E tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  cypress-run:
    if: github.repository == 'redwoodjs/redwood'
    strategy:
      matrix:
        containers: [1, 2, 3]
        os: ['ubuntu-latest']
        node-version: ['14']
      fail-fast: true
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} | Node ${{ matrix.node-version }} latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install framework modules
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Create a temporary directory
        id: createpath
        run: |
          project_path=$(mktemp -d -t redwood.XXXXXX)
          echo "::set-output name=project_path::$project_path"

      - name: Create a RedwoodJS app
        run: ./tasks/run-e2e ${{ steps.createpath.outputs.project_path }} --no-start

      # - name: Start server in background
      #   run: yarn rw dev &
      #   working-directory: ${{ steps.createpath.outputs.project_path }}

      - name: Install dependencies
        uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false
          working-directory: ./tasks/e2e

      - name: Cypress run
        uses: cypress-io/github-action@v2
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RW_PATH:  "${{ steps.createpath.outputs.project_path }}"
        with:
          browser: chrome
          install: false
          env: true
          wait-on: 'http://localhost:8910'
          start: yarn rw dev --cwd ${{ steps.createpath.outputs.project_path }}
          record: true
          working-directory: ./tasks/e2e
          spec: cypress/integration/01-tutorial/tutorial.spec.js

      - name: Cypress run
        uses: cypress-io/github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RW_PATH:  "${{ steps.createpath.outputs.project_path }}"
        with:
          browser: chrome
          headless: true
          install: false
          env: true
          record: false
          working-directory: ./tasks/e2e
          parallel: true
          spec: |
            cypress/integration/02-cli
            cypress/integration/03-storybook
            cypress/integration/04-logger
