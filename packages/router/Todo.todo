Restore existing functionality:
  ✔ Remove analyze, move into krisilyze @done(23-03-08 10:31)
    ✔ activeRoute @done(23-03-07 13:33)
      ✔ if no activeRoute render notfound @done(23-03-07 14:02)
      It needs to know if any of the Routes match
      ✔ check if splashpage is still OK @done(23-03-07 18:56)
      ✔ do we still need react.cloneElement with the key? @done(23-03-07 18:43)
        Doesn't seem like it
      ✔ actually delete analyze function, rename krisilyze @done(23-03-08 10:21)
      ✔ fix isValidRoute function @done(23-03-08 18:24)
        ✔ Add test for no path @done(23-03-08 18:21)
        ✔ Add test for no page @done(23-03-08 18:21)
        ✔ Add test for no name @done(23-03-08 18:21)

Props on Sets/Private/etc.:
      ✔ whileLoading @done(23-03-08 12:10)
      ☐ Auth related
      Do we even need this? When server rendering, we won't load auth
        ☐ error on unauthorized
        ☐ whileLoadingAuth component
        ☐ redirect on unauthenticated, and error if route not found
        ☐ error on missing parameters
      ✔ wrap components not rendered @done(23-03-21 15:21)


While loading:
  ☐ Can we wrap the whileLoadingPage in a component that updates itself with startTransition?

Redirects:
  ☐ Handling the redirect prop in a Route client side
  ☐ Handling server side redirects


Other features:
  ☐ Delete `ref` and `key` from allParams
    // There are two special props in React: `ref` and `key`. (See https://reactjs.org/warnings/special-props.html.)
    // It's very possible that the URL has `ref` as a search param (e.g. https://redwoodjs.com/?ref=producthunt).
    // Since we pass URL params to the page, we have to be careful not to pass `ref` or `key`, otherwise the page will break.
    // (The page won't actually break if `key` is passed, but it feels unclean.)
    // If users want to access them, they can use `useParams`.
  ☐ trailingSlashes and customParam types
  These need to be extracted by Babel/Vite plugins at build time, before constructing the virtual routes module


Enabling streaming/FE server:
  ☐ During prerendering, make sure routeHooks doesn't break when routeParameters function isn't defined
    i.e. the routeHooks file only has serverData

Packaging:
  ☐ Swap out handlers for:
    ✔ build @done(23-03-28 16:49)
    ✔ dev @done(23-03-28 13:12)
    ☐ serve
  ✔ Add to internal paths: @done(23-03-28 14:45)
    ✔ entry-client @done(23-03-28 13:10)
    ✔ entry-server @done(23-03-28 13:10)
    ✔  configFile: '../web/vite.config.ts', @done(23-03-28 13:02)
    ✔ '/bootstrapScript.js @done(23-03-28 14:45)


"Codemod":
  ☐ Introduce entry-server



✔ Detect routes function @done(23-03-28 16:49)
  This should live in the internal package.
✔ Remove virtual routes module? @done(23-03-28 16:49)
  We can use the same function as above


Checks:
  ✔ Check DX of error messages when using notFound, redirect and standard route @done(23-03-08 18:48)
  ☐ Update unit tests, to check if all the functionality is there
  ☐ On Throttled network, we see
    Uncaught Error: This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition.
      Quite possibly a vite dev mode issue. We need to build and test the production build
