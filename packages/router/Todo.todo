✔ Check Route has a path prop @done(23-03-03 14:32)
✔ Check that Route has page and name @done(23-03-03 14:32)
"A route that's not a redirect or notfound route needs to specify " +
'both a `page` and a `name`'
✔ validatePath @done(23-03-03 14:34)

☐ Handling the redirect prop in a Route
  ```  if (redirect) {
    const newPath = replaceParams(redirect, allParams)
    return <Redirect to={newPath} />
  }```
☐ Delete `ref` and `key` from allParams
// There are two special props in React: `ref` and `key`. (See https://reactjs.org/warnings/special-props.html.)
// It's very possible that the URL has `ref` as a search param (e.g. https://redwoodjs.com/?ref=producthunt).
// Since we pass URL params to the page, we have to be careful not to pass `ref` or `key`, otherwise the page will break.
// (The page won't actually break if `key` is passed, but it feels unclean.)
// If users want to access them, they can use `useParams`.



☐ Check DX of error messages when using notFound, redirect and standard route


☐ trailingSlashes and customParam types
  These need to be extracted by Babel/Vite plugins at build time, before constructing the virtual routes module
